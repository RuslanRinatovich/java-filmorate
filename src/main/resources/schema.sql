

CREATE TABLE IF NOT EXISTS GENRE (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS RATING (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(200) NOT NULL,
	DESCRIPTION CHARACTER VARYING,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS FILM (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	RATING_ID INTEGER NOT NULL,
	NAME CHARACTER VARYING(100) NOT NULL,
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (GENRE_ID,FILM_ID)
);


CREATE TABLE IF NOT EXISTS "USER" (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(60) NOT NULL,
	LOGIN CHARACTER VARYING(60),
	EMAIL CHARACTER VARYING(200) NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USER_PK PRIMARY KEY (ID),
	CONSTRAINT USER_UNIQUE UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS FILM_LIKE (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CREATE_DATE TIMESTAMP NOT NULL,
	CONSTRAINT FILM_LIKE_PK PRIMARY KEY (USER_ID,FILM_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	STATUS BOOLEAN,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (USER_ID,FRIEND_ID)
);


-- PUBLIC.FRIENDSHIP внешние включи

ALTER TABLE FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS FRIENDSHIP_USER_FK FOREIGN KEY (USER_ID) REFERENCES "USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE FRIENDSHIP ADD CONSTRAINT IF NOT EXISTS FRIENDSHIP_USER_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES "USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


ALTER TABLE FILM_LIKE ADD CONSTRAINT IF NOT EXISTS FILM_LIKE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE FILM_LIKE ADD CONSTRAINT IF NOT EXISTS FILM_LIKE_USER_FK FOREIGN KEY (USER_ID) REFERENCES "USER"(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


ALTER TABLE FILM_GENRE ADD CONSTRAINT IF NOT EXISTS FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE FILM_GENRE ADD CONSTRAINT IF NOT EXISTS FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;


ALTER TABLE FILM ADD CONSTRAINT IF NOT EXISTS FILM_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES RATING(ID) ON DELETE RESTRICT ON UPDATE RESTRICT;